#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>

#define SS3 LG(LS(N3))
#define SS4 LG(LS(N4))
#define SS5 LG(LS(N5))

#define MY_UNDO LG(Z)
#define MY_REDO LG(LS(Z))

#define MY_COPY LG(C)
#define MY_PASTE LG(V)

#define MISCON C_AC_DESKTOP_SHOW_ALL_WINDOWS

#define L_DEFAULT 0
#define L_INSERT 1
#define L_NUMBER 2
#define L_BT 3

/ {
    behaviors {
        rot_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;
        };

        ltt: layer_tap_to {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&to>, <&kp>;
            display-name = "Layer-Tap-To";
        };

        lr_par: lr_par {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp RPAR>;
            mods = <MOD_LSFT>;
        };

        l_bkt_brc: l_bkt_brc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp LBRC>;
            mods = <MOD_LSFT>;
        };

        r_bkt_brc: r_bkt_brc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp RBRC>;
            mods = <MOD_LSFT>;
        };
        
        csc: col_semi_col {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMICOLON>;
            mods = <MOD_LSFT>;
        }
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer { // L_DEFAULT
            display-name = "Utility";
            bindings = <
                &kp ESC   &kp SS3        &kp SS4        &mmv MOVE_UP   &trans             &kp LG(LS(Z))       &trans    &kp LG(LS(Z)) &to L_INSERT    &kp C_BRI_DN   &kp C_BRI_UP    &kp BSPC
                &kp TAB   &trans         &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT    &to L_BT            &kp LEFT  &kp DOWN      &kp UP          &kp RIGHT      &mmv MOVE_RIGHT &kp DEL
                &kp LSFT  &trans         &kp LC(LEFT)   &kp MISCON     &kp LC(RIGHT)      &trans              &kp J     &kp MY_COPY   &kp MY_PASTE    &kp L          &mkp MB4        &mkp MB5
                                         &kp LCTRL      &kp LCMD       &mkp MB2           &mkp MB1            &mkp MB1  &mkp MB2      &kp LALT        &kp SS5
            >;
        };

        my_insert_layer { // L_INSERT
            bindings = <
                &ltt L_DEFAULT ESC &kp Q         &kp W          &kp E          &kp R               &kp T             &kp Y      &kp U               &kp I           &kp O          &kp P           &kp BSPC
                &kp TAB            &kp A         &kp S          &kp D          &kp F               &kp G             &kp H      &kp J               &kp K           &kp L          &csc            &lr_par
                &kp LSFT           &kp Z         &kp X          &kp C          &kp V               &kp B             &kp N      &kp M               &kp COMMA       &kp PERIOD     &kp EQUAL       &l_bkt_brc
                                                 &kp LCTRL      &kp LCMD       &lt L_NUMBER LANG2  &kp SPACE         &kp ENTER  &lt L_NUMBER LANG1  &kp BSPC        &kp LALT
            >;
        };

        number_layer { // L_NUMBER
            bindings = <
                &ltt L_DEFAULT ESC &kp N1          &kp N2         &kp N3         &kp N4             &kp N5                &kp N6         &kp N7            &kp N8          &kp N9         &kp N0          &kp BSPC
                &kp TAB            &kp EXCL        &kp DQT        &kp HASH       &kp DLLR           &kp PRCNT             &kp AMPS       &kp SQT           &kp AT          &kp CARET      &kp TILDE       &kp BSLH
                &kp LSFT           &kp PLUS        &kp MINUS      &kp STAR       &kp SLASH          &trans                &kp GRAVE      &kp UNDER         &kp COMMA       &kp PERIOD     &kp SLASH       &r_bkt_brc
                                                   &kp LCTRL      &kp LCMD       &trans             &kp SPC               &kp ENTER      &trans            &kp BSPC        &kp LALT
            >;
        };

        bt_layer { // L_BT
            bindings = <
                &to L_DEFAULT &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3       &bt BT_SEL 4      &trans     &trans            &trans          &trans         &trans          &trans
                &out OUT_BLE  &trans        &trans         &trans         &trans             &trans            &trans     &trans            &trans          &trans         &trans          &trans
                &out OUT_USB  &trans        &trans         &trans         &trans             &trans            &trans     &trans            &trans          &trans         &trans          &trans
                                        &bt BT_CLR         &trans         &trans             &trans            &trans     &trans            &trans          &trans
            >;
        };
    };
};
